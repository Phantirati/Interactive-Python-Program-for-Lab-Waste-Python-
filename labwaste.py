# -*- coding: utf-8 -*-
"""LabWaste

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KE-OGMtw1tdHO0Qq030hrnI62IBOGEDY
"""

pip install rdkit

pip install py3Dmol

import py3Dmol
import pandas as pd
from rdkit import Chem
from rdkit.Chem import AllChem

# ‡πÇ‡∏´‡∏•‡∏î‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå CSV
file_path = "lab_chemicals_database_2.csv"
df = pd.read_csv(file_path)

def get_chemical_info(smiles):
    "‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• CSV"
    chem_info = df[df["SMILES"] == smiles]
    if not chem_info.empty:
        return chem_info.iloc[0].to_dict()
    return None

def show_3D_molecule(smiles):
    "‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏•‡∏Å‡∏∏‡∏•‡∏™‡∏≤‡∏°‡∏°‡∏¥‡∏ï‡∏¥"
    mol = Chem.MolFromSmiles(smiles)
    if mol:
        mol_h = Chem.AddHs(mol)
        AllChem.EmbedMolecule(mol_h, AllChem.ETKDG())
        mol_block = Chem.MolToMolBlock(mol_h)
        viewer = py3Dmol.view(width=400, height=400)
        viewer.addModel(mol_block, "mol")
        viewer.setStyle({"stick": {}, "sphere": {"radius": 0.3}})
        viewer.zoomTo()
        viewer.show()
    else:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á 3D ‡πÑ‡∏î‡πâ")

def check_disposal(smiles):
    "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏ß‡∏£‡∏ó‡∏¥‡πâ‡∏á‡∏•‡∏á‡∏≠‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà"
    info = get_chemical_info(smiles)
    if not info:
        print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏™‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•!")
        return

    name = info["Name"]
    solubility = info["WaterSolubility"]
    pKa = info["pKa"]
    waste_category = info["WasteCategory"]
    disposal_method = info["DisposalMethod"]

    print(f"üî¨ ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£: {name}")
    print(f"üíß ‡∏Å‡∏≤‡∏£‡∏•‡∏∞‡∏•‡∏≤‡∏¢‡∏ô‡πâ‡∏≥: {solubility} g/L")
    print(f"‚öñÔ∏è ‡∏Ñ‡πà‡∏≤ pKa: {pKa}")
    print(f"üóëÔ∏è ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢: {waste_category}")
    print(f"‚ö†Ô∏è ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏à‡∏±‡∏î: {disposal_method}")

    if disposal_method.startswith("Non-hazardous chemicals") or disposal_method.startswith("Can be disposed of in the drain"):
        print("‚úÖ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏≥‡∏à‡∏±‡∏î‡∏™‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°")
    else:
        print("üõë ‡∏´‡πâ‡∏≤‡∏°‡∏ó‡∏¥‡πâ‡∏á‡∏™‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏•‡∏á‡∏≠‡πà‡∏≤‡∏á‡∏•‡πâ‡∏≤‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå!")
        print("üí° ‡πÇ‡∏õ‡∏£‡∏î‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏à‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")

# ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
while True:
    smiles_input = input("\nüî¨ ‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏π‡∏ï‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ SMILES (‡∏´‡∏£‡∏∑‡∏≠ 'exit' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å): ").strip()
    if smiles_input.lower() == "exit":
        print("üëã ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°!")
        break
    elif smiles_input:
        check_disposal(smiles_input)
        show_3D_molecule(smiles_input)
    else:
        print("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏π‡∏ï‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")